Esta API Rest está escrita en PHP sin usar ningún tipo de framework, lo que
le permite ser facilmente escalable a la mayoria de sistemas. Para adaptarla,
será necesario hacer unas modificaciones que redactaré a continuación:

- En clases/conexion/config será necesario editar los datos de conexión por los
de la base de datos que necesitemos o vayamos a usar. Ahora están preparados
para ser usados en local en XAMPP.

- En clases/conexion/conexion.php tendremos que buscar está linea:
$this->conexion = new mysqli($this->server,$this->user,$this->password,$this->database,$this->port);
Ese tipo de conexion solo valdrá en el caso de que la base de datos sea
mysql. Si es de otro tipo, tendrás que consultar la documentacion de php para
ver como realizar esta conexión.

- En clases/auth.class.php serán necesarios varios cambios. La función login esta pensada para recibir un
json con este formato:
{
	"usuario":"usuario@gmail.com",
    "password":"aaaaa"
}
Si se recibiese un json distinto, habría que modificar esta función modificando $datos['usuario']
y $datos['password'] escribiendo en lugar de usuario y password los nombres de los valores del json recibido en todos los lugares donde aparecen.

La comprobacion que se hace en if($datos[0]['estado'] == "Activo"){ se debe a que en la tabla de usuarios hay una columna llamada estado en la que guardamos un string, y en el ejemplo hemos elegido guardar Activo o Inactivo. Si se quiere verificar si un usuario esta activo o no de otra manera, habrá que cambiar dicha comparación. Por ejemplo, si dejar ese campo en blanco significa que el usuario está activo, habría que cambiar dicha linea por esta: if($datos[0]['estado'] == ""){

En la función obtenerDatosUsuario la consulta que se guarda en $query deberá de estar adaptada a la tabla que se quiera usar para hacer el login y al dato que se quiera usar para autentificar. En este caso se usa con un email, pero podría usarse con el nombre de usuario siempre y cuando fuese lo que recibieramos en el json.

Em ña función insertarToken el insert que se hace esta adaptado para introducir datos en una tabla con los campos: id (el id del token. Autoincremental), usuarioId (el usuario al que pertenece el token), token (el token generado), estado (que debe ser Activo) y fecha (que será la fecha en la que se hace el insert). En el caso de que la tabla de los token sea distinta, habría que modificar el INSERT de esta funcíón.



En las tablas de la base de datos a los que ataquemos, los id de las tablas
deberán de ser enteros auto incrementales.